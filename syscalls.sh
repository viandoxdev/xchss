#!/bin/bash

# This script generates the syscalls.s file, its probably not portable.

set -e
syscall() {
	stripped="${1#"rt_"}"
	stripped="${stripped%$"64"}"
	stripped="${stripped%$"6"}"
	sysc="syscall"
	if [ "$stripped" = "clone" ]; then
		# work around
		stripped="long clone"
		sysc="long clone"
	fi
	man -P cat 2 "$1" 2>/dev/null | awk '
	/^UNIMPLEMENTED\(2\)/ {
		print "; /!\\ UNIMPLEMENTED"
		exit
	}
	/^NAME/ {
		getline
		i = index($0,"-")
		s = substr($0,i+1)
		sub(/^\s+/,"",s)
		print "; " toupper("'"$stripped"'") " - " s
	}
	/DESCRIPTION/ { exit }
	/^ *[_ a-zA-Z0-9*]+ ('"$stripped"'|'"$sysc"')\([a-zA-Z][_0-9A-Za-z]+/ {
		scanning = index($0, ")") != 0
		buf = $0
	}
	{
		if (scanning) {
			buf = buf $0
			if (index($0, ")") != 0) {
				regs[0] = "rdi"
				regs[1] = "rsi"
				regs[2] = "rdx"
				regs[3] = "r10"
				regs[4] = "r8 "
				regs[5] = "r9 "
				regs[6] = "   "
				regs[7] = "   "
				regs[8] = "   "
				res = $1
				start = index(buf, "(") + 1
				end = index(buf, ")")
				if (end == 0) {
					end = length(buf)
				}
				buf = substr(buf, start, end - start)
				len = split(buf, args, ",")
				for(ri = 0; ri < len && ri < 9; ri++) {
					gsub(/^\s+|\s+$/, "", args[ri + 1])
					print "; %" regs[ri] " <- " args[ri + 1]
				}
				print "; %rax -> " res
				exit
			}
		}
	}
	'
	symbol="$(tr '[:lower:]' '[:upper:]' <<< "sys_$1")"
	echo "%define $symbol $2"
	echo
}

echo "; vi: ft=asm"
echo "; This file is generated by syscalls.sh by scrapping the man pages"
echo
curl -s https://raw.githubusercontent.com/torvalds/linux/master/arch/x86/entry/syscalls/syscall_64.tbl \
	| awk '/^[0-9]+\s(common|64)/ {print $3" "$1}' \
	| while read -r l; do
		read -ra a <<< "$l"
		syscall "${a[0]}" "${a[1]}"
	done
